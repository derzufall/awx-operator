apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: awx-operator-environments
  namespace: argocd
  labels:
    app.kubernetes.io/name: awx-operator
    app.kubernetes.io/part-of: awx-operator
    app.kubernetes.io/managed-by: argocd
  annotations:
    # 🔄 ApplicationSet notifications
    notifications.argoproj.io/subscribe.on-sync-succeeded.slack: awx-operator-notifications
    notifications.argoproj.io/subscribe.on-sync-failed.slack: awx-operator-alerts
spec:
  # 🎯 Git directory generator - automatically discovers environments
  generators:
  - git:
      repoURL: https://github.com/wolkenzentrale/awx-operator.git
      revision: HEAD
      directories:
      - path: manifests/overlays/*
      
  # 🏗️ Template for generating applications
  template:
    metadata:
      name: 'awx-operator-{{path.basename}}'
      labels:
        app.kubernetes.io/name: awx-operator
        app.kubernetes.io/part-of: awx-operator
        app.kubernetes.io/managed-by: argocd
        environment: '{{path.basename}}'
      annotations:
        # 🎯 Environment-specific annotations
        operator.wolkenzentrale.de/environment: '{{path.basename}}'
        operator.wolkenzentrale.de/auto-generated: 'true'
        # 🔄 Dynamic notifications based on environment
        notifications.argoproj.io/subscribe.on-sync-failed.slack: 'awx-operator-{{path.basename}}-alerts'
      finalizers:
        - resources-finalizer.argocd.argoproj.io
        
    spec:
      # 🎯 Project reference
      project: default
      
      # 📦 Source configuration
      source:
        repoURL: https://github.com/wolkenzentrale/awx-operator.git
        targetRevision: HEAD
        path: '{{path}}'
        
        # 🔨 Kustomize configuration
        kustomize:
          # 🖼️ Dynamic image tagging based on environment
          images:
            - 'quay.io/wolkenzentrale/awx-operator:{{path.basename == "production" && "v0.0.1" || "latest"}}'
          
          # 🏷️ Common labels for all resources
          commonLabels:
            argocd.argoproj.io/instance: 'awx-operator-{{path.basename}}'
            app.kubernetes.io/managed-by: argocd
            environment: '{{path.basename}}'
          
          # 🏷️ Environment-specific annotations
          commonAnnotations:
            argocd.argoproj.io/sync-wave: "1"
            operator.wolkenzentrale.de/deployed-by: argocd
            operator.wolkenzentrale.de/environment: '{{path.basename}}'

      # 🎯 Dynamic destination configuration
      destination:
        server: https://kubernetes.default.svc
        namespace: 'awx-operator-{{path.basename == "production" && "system" || path.basename}}'

      # 🔄 Environment-specific sync policies
      syncPolicy:
        # ⚡ Production: automated, others: manual
        automated:
          prune: '{{path.basename == "production"}}'
          selfHeal: '{{path.basename == "production"}}'
          allowEmpty: false
        
        # 🔧 Sync options
        syncOptions:
          - CreateNamespace=true
          - PrunePropagationPolicy=foreground
          - PruneLast=true
          - RespectIgnoreDifferences=true
          - ServerSideApply=true
          - ApplyOutOfSyncOnly=true
        
        # 🔄 Retry configuration
        retry:
          limit: 5
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m

      # 📊 Revision history
      revisionHistoryLimit: 10

      # 🎛️ Ignore differences for dynamic fields
      ignoreDifferences:
        - group: apps
          kind: Deployment
          jsonPointers:
            - /spec/replicas
        - group: ""
          kind: ConfigMap
          jsonPointers:
            - /data
      
      # 🎯 Environment-specific info
      info:
        - name: 'Environment'
          value: '{{path.basename}}'
        - name: 'Description'
          value: 'AWX Operator deployment for {{path.basename}} environment'
        - name: 'Source Path'
          value: '{{path}}'
        - name: 'Auto-Generated'
          value: 'This application was auto-generated by ApplicationSet'

  # 🔄 Sync policy for the ApplicationSet itself
  syncPolicy:
    # 🎯 Preserve application resources when ApplicationSet is deleted
    preserveResourcesOnDeletion: true
 